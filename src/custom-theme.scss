
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$lullaboo-palette: (
 50: #F2E6F2,
 100: #DFC0Df,
 200: #CB98CB,
 300: #B571B6,
 400: #A554A6,
 500: #963D97,
 600: #893891,
 700: #773288,
 800: #6A2D7E,
 900: #4F246C,
 
 contrast: (
   50: rgba(black, 0.87),
   100: rgba(black, 0.87),
   200: rgba(black, 0.87),
   300: rgba(black, 0.87),
   400: white,
   500: white,
   600: white,
   700: white,
   800: white,
   900: white,
   
 )
);

$staffPortal_POC-primary: mat.define-palette($lullaboo-palette);
$staffPortal_POC-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$staffPortal_POC-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$staffPortal_POC-theme: mat.define-light-theme((
  color: (
    primary: $staffPortal_POC-primary,
    accent: $staffPortal_POC-accent,
    warn: $staffPortal_POC-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($staffPortal_POC-theme);

